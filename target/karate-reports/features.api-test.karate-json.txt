{"failedCount":1,"prefixedPath":"classpath:features\/api-test.feature","packageQualifiedName":"features.api-test","loopIndex":-1,"relativePath":"features\/api-test.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4","millis":0.0,"status":"failed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"def token = call read('get-okta-token.feature').authToken"},"stepLog":"14:18:18.703 karate.env system property was: dev \n14:18:18.703 Executing AWS CLI command:  aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text \n14:18:18.704 command: [aws, secretsmanager, get-secret-value, --secret-id, dev-ots-rpis-xp-api-okta, --query, SecretString, --output, text], working dir: null\n14:18:18.710 AWS CLI command output:   \n14:18:18.711 command: [aws, secretsmanager, get-secret-value, --secret-id, dev-ots-rpis-xp-api-okta, --query, SecretString, --output, text, 2>&1], working dir: null\n14:18:18.713 AWS CLI command error:   \n14:18:18.725 Error executing AWS CLI command or parsing output:  {\n}\n \n14:18:18.729 classpath:features\/api-test.feature:4\n* def token = call read('get-okta-token.feature').authToken\n>> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5","millis":0.0,"status":"failed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"def authHeader = { Authorization: 'Bearer ' + token }"},"stepLog":"14:18:18.729 classpath:features\/api-test.feature:5\n* def authHeader = { Authorization: 'Bearer ' + token }\n>> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5\nclasspath:features\/api-test.feature:6","millis":0.0,"status":"failed"},"step":{"background":true,"line":6,"prefix":"*","index":2,"text":"def baseUrl = 'https:\/\/app.stsfcr-dev.cfadevelop.com\/login'"},"stepLog":"14:18:18.730 classpath:features\/api-test.feature:6\n* def baseUrl = 'https:\/\/app.stsfcr-dev.cfadevelop.com\/login'\n>> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5\nclasspath:features\/api-test.feature:6\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5\nclasspath:features\/api-test.feature:6\nclasspath:features\/api-test.feature:9","millis":0.0,"status":"failed"},"step":{"line":9,"prefix":"Given","index":0,"text":"url baseUrl + '\/publish-invoice-reimbursement-categories'"},"stepLog":"14:18:18.730 classpath:features\/api-test.feature:9\nGiven url baseUrl + '\/publish-invoice-reimbursement-categories'\n>> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5\nclasspath:features\/api-test.feature:6\nclasspath:features\/api-test.feature:9\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5\nclasspath:features\/api-test.feature:6\nclasspath:features\/api-test.feature:9\nclasspath:features\/api-test.feature:10","millis":0.0,"status":"failed"},"step":{"line":10,"prefix":"And","index":1,"text":"headers authHeader"},"stepLog":"14:18:18.730 classpath:features\/api-test.feature:10\nAnd headers authHeader\n>> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5\nclasspath:features\/api-test.feature:6\nclasspath:features\/api-test.feature:9\nclasspath:features\/api-test.feature:10\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5\nclasspath:features\/api-test.feature:6\nclasspath:features\/api-test.feature:9\nclasspath:features\/api-test.feature:10\nclasspath:features\/api-test.feature:11","millis":0.0,"status":"failed"},"step":{"line":11,"prefix":"When","index":2,"text":"method post"},"stepLog":"14:18:18.730 classpath:features\/api-test.feature:11\nWhen method post\n>> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5\nclasspath:features\/api-test.feature:6\nclasspath:features\/api-test.feature:9\nclasspath:features\/api-test.feature:10\nclasspath:features\/api-test.feature:11\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5\nclasspath:features\/api-test.feature:6\nclasspath:features\/api-test.feature:9\nclasspath:features\/api-test.feature:10\nclasspath:features\/api-test.feature:11\nclasspath:features\/api-test.feature:12","millis":0.0,"status":"failed"},"step":{"line":12,"prefix":"Then","index":3,"text":"status 200"},"stepLog":"14:18:18.731 classpath:features\/api-test.feature:12\nThen status 200\n>> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5\nclasspath:features\/api-test.feature:6\nclasspath:features\/api-test.feature:9\nclasspath:features\/api-test.feature:10\nclasspath:features\/api-test.feature:11\nclasspath:features\/api-test.feature:12\n"}],"line":8,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:features\/api-test.feature:8\n>> karate-config.js failed\n>> Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env || 'dev'; \/\/ default to 'dev' if karate.env is not set\n03:   karate.log('karate.env system property was:', env);\n04: \n05:   var config = {\n06:     env: env,\n07:     oktaClientId: '0oa15dslq6uIPstVN0h8', \/\/ hardcode if this is safe\n08:     oktaClientSecret: '',\n09:     oktaTokenUrl: 'https:\/\/cfahome.oktapreview.com\/oauth2\/ausc6e4sj2fnPnQ670h7' \/\/ hardcode if this is safe\n10:   };\n11: \n12:   \/\/ Fetch Okta credentials using AWS CLI for the 'dev' environment\n13:   if (env === 'dev') {\n14:     var awsCmd = 'aws secretsmanager get-secret-value --secret-id dev-ots-rpis-xp-api-okta --query SecretString --output text';\n15:     karate.log('Executing AWS CLI command: ', awsCmd);\n16: \n17:     try {\n18:       var oktaCreds = karate.exec(awsCmd).trim();\n19:       karate.log('AWS CLI command output: ', oktaCreds);\n20: \n21:       \/\/ Check if AWS CLI command output is empty\n22:       if (!oktaCreds) {\n23:         var errorMsg = karate.exec(awsCmd + ' 2>&1').trim(); \/\/ Capture error message\n24:         karate.log('AWS CLI command error: ', errorMsg);\n25:         throw new Error('AWS CLI command returned empty output: ' + errorMsg);\n26:       }\n27: \n28:       var oktaCredsJson = JSON.parse(oktaCreds);\n29:       config.oktaClientId = oktaCredsJson['okta-client-id'];\n30:       config.oktaClientSecret = oktaCredsJson['okta-client-secret'];\n31:       config.oktaTokenUrl = oktaCredsJson['okta-token-url'];\n32: \n33:     } catch (e) {\n34:       karate.log('Error executing AWS CLI command or parsing output: ', e);\n35:       throw new Error('Failed to retrieve or parse Okta credentials from AWS CLI output: ' + e.message);\n36:     }\n37:   }\n38: \n39:   return config;\n40: }\n<<<<\norg.graalvm.polyglot.PolyglotException: Error: Failed to retrieve or parse Okta credentials from AWS CLI output: AWS CLI command returned empty output: \n- <js>.fn(Unnamed:35)\n\nclasspath:features\/api-test.feature:4\nclasspath:features\/api-test.feature:5\nclasspath:features\/api-test.feature:6\nclasspath:features\/api-test.feature:9\nclasspath:features\/api-test.feature:10\nclasspath:features\/api-test.feature:11\nclasspath:features\/api-test.feature:12","executorName":"main","name":"Publish Invoice Reimbursement Categories","startTime":1721157498655,"refId":"[1:8]","endTime":1721157498731,"exampleIndex":-1}],"callDepth":0,"name":"API Tests with Okta Token","description":"","resultDate":"2024-07-16 02:18:18 PM","durationMillis":0.0,"passedCount":0}